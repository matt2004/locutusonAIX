/*
 * This file is generated by jOOQ.
 */
package org.example.jooq.bank.tables.records;


import org.example.jooq.bank.tables.TaxSummary;
import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TaxSummaryRecord extends UpdatableRecordImpl<TaxSummaryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TAX_SUMMARY.nation_id</code>.
     */
    public TaxSummaryRecord setNationId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TAX_SUMMARY.nation_id</code>.
     */
    public Integer getNationId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TAX_SUMMARY.alliance_id</code>.
     */
    public TaxSummaryRecord setAllianceId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TAX_SUMMARY.alliance_id</code>.
     */
    public Integer getAllianceId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>TAX_SUMMARY.no_internal_applied</code>.
     */
    public TaxSummaryRecord setNoInternalApplied(byte[] value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TAX_SUMMARY.no_internal_applied</code>.
     */
    public byte[] getNoInternalApplied() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>TAX_SUMMARY.no_internal_unapplied</code>.
     */
    public TaxSummaryRecord setNoInternalUnapplied(byte[] value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>TAX_SUMMARY.no_internal_unapplied</code>.
     */
    public byte[] getNoInternalUnapplied() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>TAX_SUMMARY.internal_applied</code>.
     */
    public TaxSummaryRecord setInternalApplied(byte[] value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>TAX_SUMMARY.internal_applied</code>.
     */
    public byte[] getInternalApplied() {
        return (byte[]) get(4);
    }

    /**
     * Setter for <code>TAX_SUMMARY.internal_unapplied</code>.
     */
    public TaxSummaryRecord setInternalUnapplied(byte[] value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>TAX_SUMMARY.internal_unapplied</code>.
     */
    public byte[] getInternalUnapplied() {
        return (byte[]) get(5);
    }

    /**
     * Setter for <code>TAX_SUMMARY.date</code>.
     */
    public TaxSummaryRecord setDate(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>TAX_SUMMARY.date</code>.
     */
    public Long getDate() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaxSummaryRecord
     */
    public TaxSummaryRecord() {
        super(TaxSummary.TAX_SUMMARY);
    }

    /**
     * Create a detached, initialised TaxSummaryRecord
     */
    public TaxSummaryRecord(Integer nationId, Integer allianceId, byte[] noInternalApplied, byte[] noInternalUnapplied, byte[] internalApplied, byte[] internalUnapplied, Long date) {
        super(TaxSummary.TAX_SUMMARY);

        setNationId(nationId);
        setAllianceId(allianceId);
        setNoInternalApplied(noInternalApplied);
        setNoInternalUnapplied(noInternalUnapplied);
        setInternalApplied(internalApplied);
        setInternalUnapplied(internalUnapplied);
        setDate(date);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TaxSummaryRecord
     */
    public TaxSummaryRecord(org.example.jooq.bank.tables.pojos.TaxSummary value) {
        super(TaxSummary.TAX_SUMMARY);

        if (value != null) {
            setNationId(value.getNationId());
            setAllianceId(value.getAllianceId());
            setNoInternalApplied(value.getNoInternalApplied());
            setNoInternalUnapplied(value.getNoInternalUnapplied());
            setInternalApplied(value.getInternalApplied());
            setInternalUnapplied(value.getInternalUnapplied());
            setDate(value.getDate());
            resetChangedOnNotNull();
        }
    }
}
